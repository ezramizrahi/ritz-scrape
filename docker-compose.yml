version: '3'
services:
  db:
    image: postgres:latest
    volumes:
      - ./services/db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 30s
      timeout: 30s
      retries: 3

  scraper:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./build/Dockerfile
    volumes:
      - .:/app
    env_file:
      - .env
    networks:
      - my_network

  scraper_metrics:
    build:
      context: .
      dockerfile: ./build/Dockerfile
    command: ["python3", "/app/observability/expose_metrics.py"]
    depends_on:
      scraper:
        condition: service_started
    networks:
      - my_network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml  # Mount prometheus config
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  db_data:
